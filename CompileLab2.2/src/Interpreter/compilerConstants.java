/* Generated By:JJTree&JavaCC: Do not edit this line. compilerConstants.java */
package Interpreter;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int READ = 9;
  /** RegularExpression Id. */
  int WRITE = 10;
  /** RegularExpression Id. */
  int WHILE = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int REAL = 13;
  /** RegularExpression Id. */
  int BOOL = 14;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 15;
  /** RegularExpression Id. */
  int REAL_LITERAL = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int BOOL_LITERAL = 18;
  /** RegularExpression Id. */
  int UNDERSCORE = 19;
  /** RegularExpression Id. */
  int COMMA = 20;
  /** RegularExpression Id. */
  int SEMI = 21;
  /** RegularExpression Id. */
  int COLON = 22;
  /** RegularExpression Id. */
  int LEFT_PAR = 23;
  /** RegularExpression Id. */
  int RIGHT_PAR = 24;
  /** RegularExpression Id. */
  int LEFT_BRA = 25;
  /** RegularExpression Id. */
  int RIGHT_BRA = 26;
  /** RegularExpression Id. */
  int LEFT_CUR = 27;
  /** RegularExpression Id. */
  int RIGHT_CUR = 28;
  /** RegularExpression Id. */
  int ASSIGN = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int TIMES = 32;
  /** RegularExpression Id. */
  int DIVIDE = 33;
  /** RegularExpression Id. */
  int MOD = 34;
  /** RegularExpression Id. */
  int LESS = 35;
  /** RegularExpression Id. */
  int GREATER = 36;
  /** RegularExpression Id. */
  int EQUAL = 37;
  /** RegularExpression Id. */
  int NOTEQUAL = 38;
  /** RegularExpression Id. */
  int LESS_EQUAL = 39;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 40;
  /** RegularExpression Id. */
  int IDENTIFIER = 41;
  /** RegularExpression Id. */
  int LETTER = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"else\"",
    "\"read\"",
    "\"write\"",
    "\"while\"",
    "\"int\"",
    "\"real\"",
    "\"bool\"",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<DIGIT>",
    "<BOOL_LITERAL>",
    "\"_\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"<>\"",
    "\"<=\"",
    "\">=\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "\"!\"",
  };

}
